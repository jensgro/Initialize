// slanted corner
@mixin slanted-corner($position, $dimension, $cornercol, $bgcol) {
	&{
		background-color: $bgcol;
		position: relative;
	}
    &:after{
    	content: "";
		position: absolute;
		height:$dimension;
		display: block;
		background: $bgcol;
		@include box-sizing(border-box);
		width: 100%;
         }
	&:before {
		content: "";
		position: absolute;
	  	width: 0px;
	  	height: 0px;
	}
	
	@if $position == tl {
		& {
		  border-left: $dimension solid $bgcol;
		  margin: $dimension*2 0 $dimension 0;
		}
		&:after {
			top: -$dimension;
			right: 0;
			margin-left: $dimension;
		}
		
		&:before {
		  	top: -$dimension;
		  	left: -$dimension;
		  	border-bottom: $dimension solid $cornercol; 
		  	border-left: $dimension solid transparent;	
		}

		
	} @else if $position == tr {
		& {
		  border-right: $dimension solid $bgcol;
		  margin: $dimension*2 0 $dimension 0;
		}

		&:after {
			top: -$dimension;
			left: 0;
			margin-right: $dimension;
		}
		
		&:before {
		  	top: -$dimension;
		  	right: -$dimension;
		  	border-bottom: $dimension solid $cornercol; 
		  	border-right: $dimension solid transparent;			
		}

		
	} @else if $position == br {
		& {
		  border-right: $dimension solid $bgcol;
		  margin: $dimension 0 $dimension*2 0;
		}

		&:after {
			bottom: -$dimension;
			left: 0;
			margin-right: $dimension;
		}
		
		&:before {
		  	bottom: -$dimension;
		  	right: -$dimension;
		  	border-top: $dimension solid $cornercol; 
		  	border-right: $dimension solid transparent;			
		}
		
	} @else if $position == bl {
		& {
		  border-left: $dimension solid $bgcol;
		  margin: $dimension 0 $dimension*2 0;
		}

		&:after {
			bottom: -$dimension;
			right: 0;
			margin-left: $dimension;
		}
		
		&:before {
		  	bottom: -$dimension;
		  	left: -$dimension;
		  	border-top: $dimension solid $cornercol; 
		  	border-left: $dimension solid transparent;			
		}
		
	}
	
}